apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gitlab-server.fullname" . }}
  labels:
    {{- include "gitlab-server.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "gitlab-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "gitlab-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gitlab-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: ssh
              containerPort: 22
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: ssh
            initialDelaySeconds: 400
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: ssh
            initialDelaySeconds: 400
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: "GITLAB_OMNIBUS_CONFIG"
              value: "external_url 'https://{{ .Values.gitlab_omnibus_config.external_url }}';
                       pages_external_url 'http://pages-{{ .Release.Name }}.{{ .Values.hosts.domain }}';
                       postgresql['enable'] = false;
                       prometheus['enable'] = false;
                       gitlab_rails['db_adapter'] = '{{ .Values.gitlab_omnibus_config.gitlab_rails_db_adapter }}';
                       gitlab_rails['db_database'] = '{{ .Values.postgresql.postgresqlDatabase }}';
                       gitlab_rails['db_pool'] = 1;
                       gitlab_rails['db_username'] = '{{ .Values.postgresql.postgresqlUsername }}';
                       gitlab_rails['db_password'] = '{{ .Values.postgresql.postgresqlPassword }}';
                       gitlab_rails['db_host'] = '{{ .Release.Name }}-postgresql';
                       gitlab_rails['db_port'] = {{ .Values.gitlab_omnibus_config.gitlab_rails_db_port }};
                       redis['enable'] = {{ .Values.gitlab_omnibus_config.redis_enable }};
                       gitlab_rails['redis_host'] = '{{ .Release.Name }}-redis';
                       gitlab_rails['smtp_enable'] = {{ .Values.gitlab_omnibus_config.gitlab_rails_smtp_enable }};
                       gitlab_rails['smtp_address'] = 'email-smtp.{{ .Values.hosts.aws_region }}.amazonaws.com';
                       gitlab_rails['smtp_domain'] = '{{ .Release.Name }}.{{ .Values.hosts.domain }}';
                       gitlab_rails['smtp_enable_starttls_auto'] = true;
                       gitlab_rails['smtp_port'] = 587;
                       gitlab_rails['gitlab_email_from'] = 'gitlab@{{ .Values.hosts.domain }}';
                       gitlab_rails['gitlab_email_reply_to'] = 'noreply@{{ .Values.hosts.domain }}';
                       gitlab_rails['smtp_authentication'] = 'login';
                       gitlab_rails['smtp_user_name'] = '{{ .Values.gitlab_omnibus_config.gitlab_rails_smtp_user_name }}';
                       gitlab_rails['smtp_password'] = '{{ .Values.gitlab_omnibus_config.gitlab_rails_smtp_password }}';
                       gitlab_pages['inplace_chroot'] = true;
                       prometheus_monitoring['enable'] = false;
                       letsencrypt['enable'] = false"
            - name: "PATH"
              value: "/opt/gitlab/embedded/bin:/opt/gitlab/bin:/assets:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
          volumeMounts:
            - mountPath: /var/opt/gitlab/gitlab-ci/builds
              name: persistent-storage
              subPath: gitlab/gitlab-ci/builds
            - mountPath: /var/opt/gitlab/git-data
              name: persistent-storage
              subPath: gitlab/git-data
            - mountPath: /var/opt/gitlab/.ssh
              name: persistent-storage
              subPath: gitlab/.ssh
            - mountPath: /var/opt/gitlab/gitlab-rails/shared
              name: persistent-storage
              subPath: gitlab/gitlab-rails/shared
            - mountPath: /var/opt/gitlab/gitlab-rails/uploads
              name: persistent-storage
              subPath: gitlab/gitlab-rails/uploads
            - mountPath: /etc/gitlab
              name: persistent-storage
              subPath: etc/gitlab
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: efs-claim
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
